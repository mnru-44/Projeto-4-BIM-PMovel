{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { estilos } from \"./estilos\";\nimport { BotaoAdd } from \"../botaoAdd\";\nimport { useEffect, useState } from \"react\";\nimport { buscarPais, pegarpaisTempoReal } from \"../../servicos/firestore\";\nimport { ItemLista } from \"../CardPais\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ListarPais(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    Pais = _useState2[0],\n    setPais = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    refreshing = _useState4[0],\n    setRefreshing = _useState4[1];\n  function carregarPais() {\n    return _carregarPais.apply(this, arguments);\n  }\n  function _carregarPais() {\n    _carregarPais = _asyncToGenerator(function* () {\n      setRefreshing(true);\n      var PaisFirestore = yield buscarPais();\n      setPais(PaisFirestore);\n      setRefreshing(false);\n    });\n    return _carregarPais.apply(this, arguments);\n  }\n  useEffect(function () {\n    carregarPais();\n    pegarpaisTempoReal(setPais);\n  }, []);\n  return _jsxs(View, {\n    style: estilos.container,\n    children: [Pais.length > 0 && _jsx(FlatList, {\n      data: Pais,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(ItemLista, {\n          pais: item,\n          navigation: navigation\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      refreshing: refreshing,\n      onRefresh: carregarPais\n    }), _jsx(BotaoAdd, {\n      onPress: function onPress() {\n        return navigation.navigate('ManterPais');\n      }\n    })]\n  });\n}","map":{"version":3,"names":["estilos","BotaoAdd","useEffect","useState","buscarPais","pegarpaisTempoReal","ItemLista","jsx","_jsx","jsxs","_jsxs","ListarPais","_ref","navigation","_useState","_useState2","_slicedToArray","Pais","setPais","_useState3","_useState4","refreshing","setRefreshing","carregarPais","_carregarPais","apply","arguments","_asyncToGenerator","PaisFirestore","View","style","container","children","length","FlatList","data","renderItem","_ref2","item","pais","keyExtractor","id","onRefresh","onPress","navigate"],"sources":["C:/Users/manel/Documents/Projeto-3-BIM-PMovel-main/src/Componentes/ListarPais/index.js"],"sourcesContent":["import { View, FlatList, ImageBackground } from \"react-native\"\nimport { estilos } from \"./estilos\"\nimport { BotaoAdd } from \"../botaoAdd\"\nimport { useEffect, useState } from \"react\"\nimport { buscarPais, pegarpaisTempoReal } from \"../../servicos/firestore\"\nimport { ItemLista } from \"../CardPais\"\n\nexport function ListarPais({ navigation }) {\n    const [Pais, setPais] = useState([])\n    const [refreshing, setRefreshing] = useState(false)\n    async function carregarPais() {\n        setRefreshing(true)\n        const PaisFirestore = await buscarPais()\n        setPais(PaisFirestore)\n        setRefreshing(false)\n    }\n    useEffect(() => {\n        carregarPais()\n        pegarpaisTempoReal(setPais)\n    }, [])\n\n    return (\n        <View style={estilos.container}>\n            {Pais.length > 0 && (<FlatList\n                data={Pais}\n                renderItem={({ item }) => <ItemLista pais={item} navigation={navigation} />}\n                keyExtractor={item => item.id}\n                refreshing={refreshing}\n                onRefresh={carregarPais}\n            />)\n            }\n            <BotaoAdd onPress={() => navigation.navigate('ManterPais')} />\n        </View>\n    )\n}"],"mappings":";;;;;AACA,SAASA,OAAO;AAChB,SAASC,QAAQ;AACjB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,UAAU,EAAEC,kBAAkB;AACvC,SAASC,SAAS;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvC,OAAO,SAASC,UAAUA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACnC,IAAAC,SAAA,GAAwBX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAAI,UAAA,GAAoChB,QAAQ,CAAC,KAAK,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA5CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAAmB,SACpCG,YAAYA,CAAA;IAAA,OAAAC,aAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,cAAA;IAAAA,aAAA,GAAAG,iBAAA,CAA3B,aAA8B;MAC1BL,aAAa,CAAC,IAAI,CAAC;MACnB,IAAMM,aAAa,SAASxB,UAAU,CAAC,CAAC;MACxCc,OAAO,CAACU,aAAa,CAAC;MACtBN,aAAa,CAAC,KAAK,CAAC;IACxB,CAAC;IAAA,OAAAE,aAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EACDxB,SAAS,CAAC,YAAM;IACZqB,YAAY,CAAC,CAAC;IACdlB,kBAAkB,CAACa,OAAO,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,OACIR,KAAA,CAACmB,IAAI;IAACC,KAAK,EAAE9B,OAAO,CAAC+B,SAAU;IAAAC,QAAA,GAC1Bf,IAAI,CAACgB,MAAM,GAAG,CAAC,IAAKzB,IAAA,CAAC0B,QAAQ;MAC1BC,IAAI,EAAElB,IAAK;MACXmB,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGC,IAAI,GAAAD,KAAA,CAAJC,IAAI;QAAA,OAAO9B,IAAA,CAACF,SAAS;UAACiC,IAAI,EAAED,IAAK;UAACzB,UAAU,EAAEA;QAAW,CAAE,CAAC;MAAA,CAAC;MAC5E2B,YAAY,EAAE,SAAAA,aAAAF,IAAI;QAAA,OAAIA,IAAI,CAACG,EAAE;MAAA,CAAC;MAC9BpB,UAAU,EAAEA,UAAW;MACvBqB,SAAS,EAAEnB;IAAa,CAC3B,CAAE,EAEHf,IAAA,CAACP,QAAQ;MAAC0C,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAM9B,UAAU,CAAC+B,QAAQ,CAAC,YAAY,CAAC;MAAA;IAAC,CAAE,CAAC;EAAA,CAC5D,CAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}