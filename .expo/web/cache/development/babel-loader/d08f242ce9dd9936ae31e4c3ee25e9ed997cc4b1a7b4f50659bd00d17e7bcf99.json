{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { React, useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation } from '@react-navigation/native';\nimport { styles } from \"./styles.js\";\nimport { getStorage, ref, listAll, getDownloadURL } from 'firebase/storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function mainPage() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    imageList = _useState2[0],\n    setImageList = _useState2[1];\n  useEffect(function () {\n    var fetchImageList = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var storage = getStorage();\n          var storageRef = ref(storage, 'gs://projeto-4-bim.appspot.com/natura/');\n          var imageListResult = yield listAll(storageRef);\n          var promises = imageListResult.items.map(function () {\n            var _ref2 = _asyncToGenerator(function* (imageRef) {\n              var imageUrl = yield getDownloadURL(imageRef);\n              return {\n                imageUrl: imageUrl\n              };\n            });\n            return function (_x) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n          var resolvedPromises = yield Promise.all(promises);\n          setImageList(resolvedPromises);\n        } catch (error) {\n          console.error('Error fetching image list:', error);\n        }\n      });\n      return function fetchImageList() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchImageList();\n  }, []);\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: imageList,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(View, {\n          children: _jsx(Image, {\n            source: {\n              uri: item.imageUrl\n            },\n            style: {\n              width: 200,\n              height: 200\n            }\n          })\n        });\n      },\n      ListEmptyComponent: function ListEmptyComponent() {\n        return _jsx(Text, {\n          children: \"Nenhuma imagem encontrada.\"\n        });\n      }\n    })\n  });\n}\n;","map":{"version":3,"names":["React","useState","useEffect","ScrollView","Text","View","Image","useNavigation","styles","getStorage","ref","listAll","getDownloadURL","jsx","_jsx","mainPage","_useState","_useState2","_slicedToArray","imageList","setImageList","fetchImageList","_ref","_asyncToGenerator","storage","storageRef","imageListResult","promises","items","map","_ref2","imageRef","imageUrl","_x","apply","arguments","resolvedPromises","Promise","all","error","console","children","FlatList","data","keyExtractor","item","index","toString","renderItem","_ref3","source","uri","style","width","height","ListEmptyComponent"],"sources":["C:/Users/manel/Documents/Projeto-3-BIM-PMovel-main/src/Componentes/mainPage/mainPage.js"],"sourcesContent":["import { React, useState, useEffect } from 'react';\r\nimport { ScrollView, Text, View, Image } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { styles } from './styles.js'\r\n\r\nimport { getStorage, ref, listAll, getDownloadURL } from 'firebase/storage';\r\n\r\nexport function mainPage() {\r\n  const [imageList, setImageList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchImageList = async () => {\r\n      try {\r\n        const storage = getStorage();\r\n        const storageRef = ref(storage, 'gs://projeto-4-bim.appspot.com/natura/'); // Substitua pelo caminho real da sua pasta\r\n\r\n        const imageListResult = await listAll(storageRef);\r\n        const promises = imageListResult.items.map(async (imageRef) => {\r\n          const imageUrl = await getDownloadURL(imageRef);\r\n          return { imageUrl };\r\n        });\r\n\r\n        const resolvedPromises = await Promise.all(promises);\r\n        setImageList(resolvedPromises);\r\n      } catch (error) {\r\n        console.error('Error fetching image list:', error);\r\n      }\r\n    };\r\n\r\n    fetchImageList();\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      <FlatList\r\n        data={imageList}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        renderItem={({ item }) => (\r\n          <View>\r\n            <Image source={{ uri: item.imageUrl }} style={{ width: 200, height: 200 }} />\r\n            {/* Pode adicionar mais informações ou estilizar conforme necessário */}\r\n          </View>\r\n        )}\r\n        ListEmptyComponent={() => <Text>Nenhuma imagem encontrada.</Text>}\r\n      />\r\n    </View>\r\n  );\r\n};"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAEnD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,MAAM;AAEf,SAASC,UAAU,EAAEC,GAAG,EAAEC,OAAO,EAAEC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE5E,OAAO,SAASC,QAAQA,CAAA,EAAG;EACzB,IAAAC,SAAA,GAAkCf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9Bf,SAAS,CAAC,YAAM;IACd,IAAMmB,cAAc;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QACjC,IAAI;UACF,IAAMC,OAAO,GAAGf,UAAU,CAAC,CAAC;UAC5B,IAAMgB,UAAU,GAAGf,GAAG,CAACc,OAAO,EAAE,wCAAwC,CAAC;UAEzE,IAAME,eAAe,SAASf,OAAO,CAACc,UAAU,CAAC;UACjD,IAAME,QAAQ,GAAGD,eAAe,CAACE,KAAK,CAACC,GAAG;YAAA,IAAAC,KAAA,GAAAP,iBAAA,CAAC,WAAOQ,QAAQ,EAAK;cAC7D,IAAMC,QAAQ,SAASpB,cAAc,CAACmB,QAAQ,CAAC;cAC/C,OAAO;gBAAEC,QAAQ,EAARA;cAAS,CAAC;YACrB,CAAC;YAAA,iBAAAC,EAAA;cAAA,OAAAH,KAAA,CAAAI,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;UAEF,IAAMC,gBAAgB,SAASC,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;UACpDP,YAAY,CAACgB,gBAAgB,CAAC;QAChC,CAAC,CAAC,OAAOG,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QACpD;MACF,CAAC;MAAA,gBAhBKlB,cAAcA,CAAA;QAAA,OAAAC,IAAA,CAAAY,KAAA,OAAAC,SAAA;MAAA;IAAA,GAgBnB;IAEDd,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,OACEP,IAAA,CAACT,IAAI;IAAAoC,QAAA,EACH3B,IAAA,CAAC4B,QAAQ;MACPC,IAAI,EAAExB,SAAU;MAChByB,YAAY,EAAE,SAAAA,aAACC,IAAI,EAAEC,KAAK;QAAA,OAAKA,KAAK,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MAChDC,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGJ,IAAI,GAAAI,KAAA,CAAJJ,IAAI;QAAA,OACjB/B,IAAA,CAACT,IAAI;UAAAoC,QAAA,EACH3B,IAAA,CAACR,KAAK;YAAC4C,MAAM,EAAE;cAAEC,GAAG,EAAEN,IAAI,CAACb;YAAS,CAAE;YAACoB,KAAK,EAAE;cAAEC,KAAK,EAAE,GAAG;cAAEC,MAAM,EAAE;YAAI;UAAE,CAAE;QAAC,CAEzE,CAAC;MAAA,CACP;MACFC,kBAAkB,EAAE,SAAAA,mBAAA;QAAA,OAAMzC,IAAA,CAACV,IAAI;UAAAqC,QAAA,EAAC;QAA0B,CAAM,CAAC;MAAA;IAAC,CACnE;EAAC,CACE,CAAC;AAEX;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}