{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput, HelperText, Snackbar } from 'react-native-paper';\nimport { logar } from \"../../servicos/requisicoesFirebase\";\nimport { styles } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function TelaSenha(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    secureMode = _useState4[0],\n    setSecureMode = _useState4[1];\n  var handleLogin = function handleLogin() {\n    if (password === 'sua_senha_secreta') {\n      navigation.navigate('PaginaProtegida');\n    } else {\n      alert('Senha incorreta. Tente novamente.');\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      label: \"Senha\",\n      value: password,\n      onChangeText: setPassword,\n      mode: \"outlined\",\n      secureTextEntry: secureMode,\n      right: _jsx(TextInput.Icon, {\n        icon: secureMode ? 'eye-off' : 'eye',\n        onPress: function onPress() {\n          return setSecureMode(!secureMode);\n        }\n      }),\n      outlineColor: \"rgba(0, 0, 0, 0)\",\n      activeOutlineColor: \"rgba(20, 20, 20, 0.2)\",\n      textColor: \"#141414\",\n      style: styles.input\n    }), _jsxs(TouchableOpacity, {\n      style: styles.botao,\n      onPress: handleLogin,\n      children: [_jsx(Text, {}), \"Entrar\"]\n    })]\n  });\n}\n;","map":{"version":3,"names":["useState","View","Text","Image","TouchableOpacity","TextInput","HelperText","Snackbar","logar","styles","jsx","_jsx","jsxs","_jsxs","TelaSenha","_ref","navigation","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","secureMode","setSecureMode","handleLogin","navigate","alert","children","label","value","onChangeText","mode","secureTextEntry","right","Icon","icon","onPress","outlineColor","activeOutlineColor","textColor","style","input","botao"],"sources":["C:/Users/manel/Documents/Projeto-3-BIM-PMovel-main/src/Componentes/TelaSenha/TelaSenha.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { View, Text, Image, TouchableOpacity } from \"react-native\";\r\nimport { TextInput, HelperText, Snackbar } from 'react-native-paper';\r\nimport { logar } from \"../../servicos/requisicoesFirebase\";\r\nimport { styles } from \"./styles\"\r\nexport function TelaSenha({ navigation }) {\r\n    const [password, setPassword] = useState('');\r\n    const [secureMode, setSecureMode] = useState(true);\r\n\r\n    const handleLogin = () => {\r\n        if (password === 'sua_senha_secreta') {\r\n            navigation.navigate('PaginaProtegida');\r\n        } else {\r\n            alert('Senha incorreta. Tente novamente.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View>\r\n            <TextInput\r\n                label=\"Senha\"\r\n                value={password}\r\n                onChangeText={setPassword}\r\n                mode=\"outlined\"\r\n                secureTextEntry={secureMode}\r\n                right={\r\n                    <TextInput.Icon\r\n                        icon={secureMode ? 'eye-off' : 'eye'}\r\n                        onPress={() => setSecureMode(!secureMode)}\r\n                    />\r\n                }\r\n                outlineColor=\"rgba(0, 0, 0, 0)\"\r\n                activeOutlineColor=\"rgba(20, 20, 20, 0.2)\"\r\n                textColor=\"#141414\"\r\n                style={styles.input} />\r\n            <TouchableOpacity style={styles.botao} onPress={handleLogin}>\r\n                <Text></Text>Entrar</TouchableOpacity>\r\n        </View>\r\n    );\r\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAEjC,SAASC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,oBAAoB;AACpE,SAASC,KAAK;AACd,SAASC,MAAM;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACjC,OAAO,SAASC,SAASA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAClC,IAAAC,SAAA,GAAgCjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAoCtB,QAAQ,CAAC,IAAI,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAEhC,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtB,IAAIN,QAAQ,KAAK,mBAAmB,EAAE;MAClCJ,UAAU,CAACW,QAAQ,CAAC,iBAAiB,CAAC;IAC1C,CAAC,MAAM;MACHC,KAAK,CAAC,mCAAmC,CAAC;IAC9C;EACJ,CAAC;EAED,OACIf,KAAA,CAACZ,IAAI;IAAA4B,QAAA,GACDlB,IAAA,CAACN,SAAS;MACNyB,KAAK,EAAC,OAAO;MACbC,KAAK,EAAEX,QAAS;MAChBY,YAAY,EAAEX,WAAY;MAC1BY,IAAI,EAAC,UAAU;MACfC,eAAe,EAAEV,UAAW;MAC5BW,KAAK,EACDxB,IAAA,CAACN,SAAS,CAAC+B,IAAI;QACXC,IAAI,EAAEb,UAAU,GAAG,SAAS,GAAG,KAAM;QACrCc,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMb,aAAa,CAAC,CAACD,UAAU,CAAC;QAAA;MAAC,CAC7C,CACJ;MACDe,YAAY,EAAC,kBAAkB;MAC/BC,kBAAkB,EAAC,uBAAuB;MAC1CC,SAAS,EAAC,SAAS;MACnBC,KAAK,EAAEjC,MAAM,CAACkC;IAAM,CAAE,CAAC,EAC3B9B,KAAA,CAACT,gBAAgB;MAACsC,KAAK,EAAEjC,MAAM,CAACmC,KAAM;MAACN,OAAO,EAAEZ,WAAY;MAAAG,QAAA,GACxDlB,IAAA,CAACT,IAAI,IAAO,CAAC,UAAM;IAAA,CAAkB,CAAC;EAAA,CACxC,CAAC;AAEf;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}