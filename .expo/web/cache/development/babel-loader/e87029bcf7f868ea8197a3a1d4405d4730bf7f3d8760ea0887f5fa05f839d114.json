{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { React, useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ref, listAll, getDownloadURL } from 'firebase/storage';\nimport { storage } from \"../../config/firebase.js\";\nimport { styles } from \"./styles.js\";\nimport { useFonts } from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function mainPage() {\n  var _useFonts = useFonts({\n      'Raleway-Regular': require(\"../../../assets/fonts/Raleway-Regular.ttf\"),\n      'Raleway-ThinItalic': require(\"../../../assets/fonts/Raleway-ThinItalic.ttf\"),\n      'Raleway-Medium': require(\"../../../assets/fonts/Raleway-Medium.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    imageList = _useState2[0],\n    setImageList = _useState2[1];\n  useEffect(function () {\n    var fetchImageList = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var storageRef = ref(storage, '/natura/');\n          var imageListResult = yield listAll(storageRef);\n          var promises = imageListResult.items.map(function () {\n            var _ref2 = _asyncToGenerator(function* (imageRef) {\n              var imageUrl = yield getDownloadURL(imageRef);\n              console.log(ima);\n              return {\n                imageUrl: imageUrl,\n                imageName: imageRef.name\n              };\n            });\n            return function (_x) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n          var resolvedPromises = yield Promise.all(promises);\n          setImageList(resolvedPromises);\n        } catch (error) {\n          console.error('Error fetching image list:', error);\n        }\n      });\n      return function fetchImageList() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchImageList();\n  }, []);\n  return _jsx(ScrollView, {\n    horizontal: true,\n    children: _jsx(View, {\n      style: {\n        flexDirection: 'row',\n        marginLeft: 20\n      },\n      children: imageList.map(function (item, index) {\n        return _jsxs(View, {\n          style: {\n            margin: 10,\n            marginRight: 17\n          },\n          children: [_jsx(Image, {\n            source: {\n              uri: item.imageUrl\n            },\n            style: {\n              width: 148,\n              height: 184,\n              borderRadius: 8,\n              shadowColor: \"rgba(211, 38, 38, 0.25)\",\n              shadowOffset: {\n                width: 0,\n                height: 4\n              },\n              shadowRadius: 8,\n              elevation: 8,\n              shadowOpacity: 1\n            }\n          }), _jsx(Text, {\n            style: {\n              fontSize: 11,\n              color: \"#9B9B9B\",\n              fontFamily: \"Raleway-Regular\",\n              marginTop: 26\n            },\n            children: \"Natura\"\n          }), _jsx(Text, {\n            style: {\n              fontSize: 16,\n              color: \"#222222\",\n              fontFamily: \"Raleway-ThinItalic\",\n              marginTop: 4\n            },\n            children: item.imageName\n          }), _jsx(Text, {\n            style: {\n              fontSize: 14,\n              color: \"#DB3022\",\n              fontFamily: \"Raleway-Medium\",\n              marginTop: 4\n            },\n            children: \"R$ 00\"\n          })]\n        }, index);\n      })\n    })\n  });\n}\n;","map":{"version":3,"names":["React","useState","useEffect","ScrollView","Image","Text","View","ref","listAll","getDownloadURL","storage","styles","useFonts","jsx","_jsx","jsxs","_jsxs","mainPage","_useFonts","require","_useFonts2","_slicedToArray","fontsLoaded","_useState","_useState2","imageList","setImageList","fetchImageList","_ref","_asyncToGenerator","storageRef","imageListResult","promises","items","map","_ref2","imageRef","imageUrl","console","log","ima","imageName","name","_x","apply","arguments","resolvedPromises","Promise","all","error","horizontal","children","style","flexDirection","marginLeft","item","index","margin","marginRight","source","uri","width","height","borderRadius","shadowColor","shadowOffset","shadowRadius","elevation","shadowOpacity","fontSize","color","fontFamily","marginTop"],"sources":["C:/Users/manel/Documents/Projeto-3-BIM-PMovel-main/src/Componentes/mainPage/mainPage.js"],"sourcesContent":["import {React, useState, useEffect } from 'react';\r\nimport { ScrollView, Image, Text, View } from 'react-native';\r\nimport { ref, listAll, getDownloadURL } from 'firebase/storage';\r\nimport { storage } from '../../config/firebase.js';\r\nimport { styles } from './styles.js'\r\nimport { useFonts } from 'expo-font';\r\n\r\nexport function mainPage() {\r\n\tconst [fontsLoaded] = useFonts({\r\n\t\t'Raleway-Regular': require('../../../assets/fonts/Raleway-Regular.ttf'),\r\n\t\t'Raleway-ThinItalic': require('../../../assets/fonts/Raleway-ThinItalic.ttf'),\r\n\t\t'Raleway-Medium': require('../../../assets/fonts/Raleway-Medium.ttf'),\r\n\t});\r\n\tconst [imageList, setImageList] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchImageList = async () => {\r\n\t\ttry {\r\n\t\t\tconst storageRef = ref(storage, '/natura/');\r\n\r\n\t\t\tconst imageListResult = await listAll(storageRef);\r\n\t\t\tconst promises = imageListResult.items.map(async (imageRef) => {\r\n\t\t\tconst imageUrl = await getDownloadURL(imageRef);\r\n\t\t\tconsole.log(ima)\r\n\t\t\treturn { imageUrl, imageName: imageRef.name };\r\n\t\t\t});\r\n\r\n\t\t\tconst resolvedPromises = await Promise.all(promises);\r\n\t\t\tsetImageList(resolvedPromises);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error fetching image list:', error);\r\n\t\t}\r\n\t\t};\r\n\r\n\t\tfetchImageList();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<ScrollView horizontal={true}>\r\n\t\t\t<View style={{ flexDirection: 'row', marginLeft: 20 }}>\r\n\t\t\t\t{imageList.map((item, index) => (\r\n\t\t\t\t<View key={index} style={{ margin: 10, marginRight: 17 }}>\r\n\t\t\t\t\t<Image source={{ uri: item.imageUrl }} style={{ width: 148, height: 184, borderRadius: 8, shadowColor: \"rgba(211, 38, 38, 0.25)\", \r\n\t\t\tshadowOffset: {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 4\r\n\t\t\t},\r\n\t\t\tshadowRadius: 8,\r\n\t\t\televation: 8,\r\n\t\t\tshadowOpacity: 1, }} />\r\n\t\t\t\t\t<Text style={{fontSize: 11, color: \"#9B9B9B\", fontFamily: \"Raleway-Regular\", marginTop: 26}}>Natura</Text>\r\n\t\t\t\t\t<Text style={{fontSize: 16, color: \"#222222\", fontFamily: \"Raleway-ThinItalic\", marginTop: 4}}>{item.imageName}</Text>\r\n\t\t\t\t\t<Text style={{fontSize: 14, color: \"#DB3022\", fontFamily: \"Raleway-Medium\", marginTop: 4}}>R$ 00</Text>\r\n\t\t\t\t</View>\r\n\t\t\t\t))}\r\n\t\t\t</View>\r\n\t\t</ScrollView>\r\n\t);\r\n\t};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}