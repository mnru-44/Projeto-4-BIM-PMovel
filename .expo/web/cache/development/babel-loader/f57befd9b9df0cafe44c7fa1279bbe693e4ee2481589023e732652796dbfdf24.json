{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { storage } from \"../../config/firebase\";\nimport { ref, uploadBytes } from 'firebase/storage';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Estoque() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    nome = _useState2[0],\n    setNome = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pasta = _useState4[0],\n    setPasta = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    image = _useState6[0],\n    setImage = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    previewUrl = _useState8[0],\n    setPreviewUrl = _useState8[1];\n  var enviarDados = function enviarDados() {\n    if (image) {\n      var storageRef = ref(storage, pasta + '/' + nome);\n      uploadBytes(storageRef, image).then(function (snapshot) {\n        console.log('Uploaded a blob or file!');\n      }).catch(function (erro) {\n        console.log(erro.message);\n      });\n    } else {\n      console.log('Nenhuma imagem selecionada.');\n    }\n  };\n  var handleChange = function handleChange(e) {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n      setPreviewUrl(URL.createObjectURL(e.target.files[0]));\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      onChangeText: setNome\n    }), _jsx(TextInput, {\n      onChangeText: setPasta\n    }), _jsx(\"label\", {\n      htmlFor: \"file\",\n      children: \"Enviar arquivo\"\n    }), _jsx(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      id: \"file\",\n      onChange: handleChange,\n      style: {\n        display: 'none'\n      }\n    }), previewUrl && _jsx(Image, {\n      source: {\n        uri: previewUrl\n      },\n      style: {\n        width: 200,\n        height: 200\n      }\n    }), _jsx(TouchableOpacity, {\n      onPress: enviarDados,\n      children: _jsx(Text, {\n        children: \"Upload\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","storage","ref","uploadBytes","View","TouchableOpacity","Text","Image","TextInput","useState","jsx","_jsx","jsxs","_jsxs","Estoque","_useState","_useState2","_slicedToArray","nome","setNome","_useState3","_useState4","pasta","setPasta","_useState5","_useState6","image","setImage","_useState7","_useState8","previewUrl","setPreviewUrl","enviarDados","storageRef","then","snapshot","console","log","catch","erro","message","handleChange","e","target","files","URL","createObjectURL","children","onChangeText","htmlFor","type","name","id","onChange","style","display","source","uri","width","height","onPress"],"sources":["C:/Users/manel/Documents/Projeto-3-BIM-PMovel-main/src/Componentes/Estoque/Estoque.js"],"sourcesContent":["import React from 'react';\r\nimport { storage } from '../../config/firebase';\r\nimport { ref, uploadBytes } from 'firebase/storage';\r\nimport { View, TouchableOpacity, Text, Image, TextInput } from 'react-native';\r\nimport { useState } from 'react';\r\n\r\nexport function Estoque() {\r\n    const [nome, setNome] = useState(\"\")\r\n    const [pasta, setPasta] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [previewUrl, setPreviewUrl] = useState(\"\");\r\n\r\n    const enviarDados = () => {\r\n        if (image) {\r\n            const storageRef = ref(storage, pasta + '/' + nome);\r\n\r\n            uploadBytes(storageRef, image)\r\n                .then((snapshot) => {\r\n                    console.log('Uploaded a blob or file!');\r\n                })\r\n                .catch((erro) => {\r\n                    console.log(erro.message);\r\n                });\r\n                \r\n        } else {\r\n            console.log('Nenhuma imagem selecionada.');\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.files[0]) {\r\n            setImage(e.target.files[0]);\r\n            setPreviewUrl(URL.createObjectURL(e.target.files[0]));\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <View>\r\n            <TextInput onChangeText={setNome}></TextInput>\r\n            <TextInput onChangeText={setPasta}></TextInput>\r\n            <label htmlFor=\"file\">Enviar arquivo</label>\r\n            <input type='file' name='file' id='file' onChange={handleChange} style={{display: 'none'}}/>\r\n            {previewUrl && <Image source={{ uri: previewUrl }} style={{ width: 200, height: 200 }} />}\r\n            <TouchableOpacity onPress={enviarDados}>\r\n                <Text>Upload</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}