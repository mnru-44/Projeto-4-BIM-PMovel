{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput, HelperText, Snackbar } from 'react-native-paper';\nimport { logar } from \"../../servicos/requisicoesFirebase\";\nimport { styles } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function TelaSenha(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    senha = _useState4[0],\n    setSenha = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    secureMode = _useState6[0],\n    setSecureMode = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    statusError = _useState8[0],\n    setStatusError = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    mensagemError = _useState10[0],\n    setMensagemError = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    statusSnakbar = _useState12[0],\n    setStatusSnakbar = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    mensagemSnakbar = _useState14[0],\n    setMensagemSnakbar = _useState14[1];\n  function fazerLogin() {\n    return _fazerLogin.apply(this, arguments);\n  }\n  function _fazerLogin() {\n    _fazerLogin = _asyncToGenerator(function* () {\n      if (email == '') {\n        setMensagemError('E-mail não pode ficar vazio!');\n        setStatusError('email');\n      } else if (senha == '') {\n        setMensagemError('Senha não pode ser em branco');\n        setStatusError('senha');\n      } else {\n        setMensagemError('');\n        setStatusError('');\n        var resultado = yield logar(email, senha);\n        if (resultado == 'sucesso') {\n          navigation.replace('MainPage', {\n            email: email\n          });\n        } else setStatusSnakbar(true);\n        setMensagemSnakbar(\"E-mail ou senha inválida\");\n        console.log(resultado);\n      }\n    });\n    return _fazerLogin.apply(this, arguments);\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      style: styles.imagem,\n      source: require(\"../../../assets/LOGO.png\")\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Login\"\n    }), _jsx(TextInput, {\n      label: \"E-mail\",\n      value: email,\n      onChangeText: setEmail,\n      mode: \"outlined\",\n      keyboardType: \"email-address\",\n      error: statusError == 'email',\n      style: styles.input,\n      outlineColor: \"rgba(0, 0, 0, 0)\",\n      activeOutlineColor: \"rgba(20, 20, 20, 0.2)\",\n      textColor: \"#141414\"\n    }), statusError == 'email' ? _jsx(HelperText, {\n      type: \"error\",\n      visible: statusError == 'email',\n      children: mensagemError\n    }) : null, _jsx(TextInput, {\n      label: \"Senha\",\n      value: senha,\n      onChangeText: setSenha,\n      mode: \"outlined\",\n      error: statusError == 'senha',\n      secureTextEntry: secureMode,\n      right: _jsx(TextInput.Icon, {\n        icon: secureMode ? 'eye-off' : 'eye',\n        onPress: function onPress() {\n          return setSecureMode(!secureMode);\n        }\n      }),\n      outlineColor: \"rgba(0, 0, 0, 0)\",\n      activeOutlineColor: \"rgba(20, 20, 20, 0.2)\",\n      textColor: \"#141414\",\n      style: styles.input\n    }), statusError == 'senha' ? _jsx(HelperText, {\n      type: \"error\",\n      visible: statusError == 'senha',\n      children: mensagemError\n    }) : null, _jsx(TouchableOpacity, {\n      style: styles.botao,\n      onPress: function onPress() {\n        return fazerLogin();\n      },\n      children: _jsx(Text, {\n        style: styles.textoButton,\n        children: \"Entrar\"\n      })\n    }), _jsxs(Text, {\n      style: styles.texto,\n      children: [\" Ainda n\\xE3o tem uma conta?\", _jsx(Text, {\n        style: styles.textoLink,\n        onPress: function onPress() {\n          return navigation.navigate('Cadastrar');\n        },\n        children: \" Cadastre-se\"\n      })]\n    }), _jsx(Snackbar, {\n      visible: statusSnakbar,\n      onDismiss: function onDismiss() {\n        return setStatusSnakbar(false);\n      },\n      duration: 2000,\n      action: {\n        label: 'OK',\n        onPress: function onPress() {\n          setStatusSnakbar(false);\n        }\n      },\n      children: mensagemSnakbar\n    })]\n  });\n}","map":{"version":3,"names":["useState","View","Text","Image","TouchableOpacity","TextInput","HelperText","Snackbar","logar","styles","jsx","_jsx","jsxs","_jsxs","TelaSenha","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","senha","setSenha","_useState5","_useState6","secureMode","setSecureMode","_useState7","_useState8","statusError","setStatusError","_useState9","_useState10","mensagemError","setMensagemError","_useState11","_useState12","statusSnakbar","setStatusSnakbar","_useState13","_useState14","mensagemSnakbar","setMensagemSnakbar","fazerLogin","_fazerLogin","apply","arguments","_asyncToGenerator","resultado","replace","console","log","style","container","children","imagem","source","require","title","label","value","onChangeText","mode","keyboardType","error","input","outlineColor","activeOutlineColor","textColor","type","visible","secureTextEntry","right","Icon","icon","onPress","botao","textoButton","texto","textoLink","navigate","onDismiss","duration","action"],"sources":["C:/Users/manel/Documents/Projeto-3-BIM-PMovel-main/src/Componentes/TelaSenha/TelaSenha.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { View, Text, Image, TouchableOpacity } from \"react-native\";\r\nimport { TextInput, HelperText, Snackbar } from 'react-native-paper';\r\nimport { logar } from \"../../servicos/requisicoesFirebase\";\r\nimport { styles } from \"./styles\"\r\nexport function TelaSenha({ navigation }) {\r\n    const [email, setEmail] = useState('')\r\n    const [senha, setSenha] = useState('')\r\n    const [secureMode, setSecureMode] = useState(true);\r\n    const [statusError, setStatusError] = useState('')\r\n    const [mensagemError, setMensagemError] = useState('')\r\n    const [statusSnakbar, setStatusSnakbar] = useState(false)\r\n    const [mensagemSnakbar, setMensagemSnakbar] = useState(false)\r\n\r\n    async function fazerLogin() {\r\n        if (email == '') {\r\n            setMensagemError('E-mail não pode ficar vazio!')\r\n            setStatusError('email')\r\n        } else if (senha == '') {\r\n            setMensagemError('Senha não pode ser em branco')\r\n            setStatusError('senha')\r\n        } else {\r\n            setMensagemError('')\r\n            setStatusError('')\r\n            const resultado = await logar(email, senha)\r\n            if (resultado == 'sucesso') {\r\n                navigation.replace('MainPage', { email: email }) //replace apaga as telas anteriores da pilha. Caso o usuário clique no voltar do celular não volta para a tela de login\r\n            } else\r\n                setStatusSnakbar(true)\r\n            setMensagemSnakbar(\"E-mail ou senha inválida\")\r\n            console.log(resultado)\r\n        }\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <Image style={styles.imagem}\r\n                source={require(\"../../../assets/LOGO.png\")}\r\n            />\r\n            <Text style={styles.title}>\r\n                Login\r\n            </Text>\r\n            <TextInput\r\n                label=\"E-mail\"\r\n                value={email}\r\n                onChangeText={setEmail}\r\n                mode=\"outlined\"\r\n                keyboardType=\"email-address\"\r\n                error={statusError == 'email'}\r\n                style={styles.input}\r\n                outlineColor=\"rgba(0, 0, 0, 0)\"\r\n                activeOutlineColor=\"rgba(20, 20, 20, 0.2)\" \r\n                textColor=\"#141414\"\r\n            />\r\n            {statusError == 'email' ? <HelperText type=\"error\" visible={statusError == 'email'}>\r\n                {mensagemError}\r\n            </HelperText> : null}\r\n            <TextInput\r\n                label=\"Senha\"\r\n                value={senha}\r\n                onChangeText={setSenha}\r\n                mode=\"outlined\"\r\n                error={statusError == 'senha'}\r\n                secureTextEntry={secureMode}\r\n                right={\r\n                    <TextInput.Icon\r\n                        icon={secureMode ? 'eye-off' : 'eye'}\r\n                        onPress={() => setSecureMode(!secureMode)}\r\n                    />\r\n                }\r\n                outlineColor=\"rgba(0, 0, 0, 0)\"\r\n                activeOutlineColor=\"rgba(20, 20, 20, 0.2)\" \r\n                textColor=\"#141414\"\r\n                style={styles.input} />\r\n            {statusError == 'senha' ? <HelperText type=\"error\" visible={statusError == 'senha'}>\r\n                {mensagemError}\r\n            </HelperText> : null}\r\n            <TouchableOpacity style={styles.botao} onPress={() => fazerLogin()}>\r\n                <Text style={styles.textoButton}>Entrar</Text>\r\n            </TouchableOpacity>\r\n            <Text style={styles.texto}> Ainda não tem uma conta?\r\n                <Text style={styles.textoLink}\r\n                    onPress={() => navigation.navigate('Cadastrar')}> Cadastre-se</Text>\r\n            </Text>\r\n            <Snackbar visible={statusSnakbar} onDismiss={() => setStatusSnakbar(false)} duration={2000}\r\n                action={{\r\n                    label: 'OK',\r\n                    onPress: () => {\r\n                        setStatusSnakbar(false)\r\n                    },\r\n                }}>\r\n                {mensagemSnakbar} \r\n            </Snackbar>\r\n        </View>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAEjC,SAASC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,oBAAoB;AACpE,SAASC,KAAK;AACd,SAASC,MAAM;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACjC,OAAO,SAASC,SAASA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAClC,IAAAC,SAAA,GAA0BjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAA0BtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAAoC1B,QAAQ,CAAC,IAAI,CAAC;IAAA2B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA3CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAAsC9B,QAAQ,CAAC,EAAE,CAAC;IAAA+B,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA3CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAAG,UAAA,GAA0ClC,QAAQ,CAAC,EAAE,CAAC;IAAAmC,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAA/CE,aAAa,GAAAD,WAAA;IAAEE,gBAAgB,GAAAF,WAAA;EACtC,IAAAG,WAAA,GAA0CtC,QAAQ,CAAC,KAAK,CAAC;IAAAuC,WAAA,GAAApB,cAAA,CAAAmB,WAAA;IAAlDE,aAAa,GAAAD,WAAA;IAAEE,gBAAgB,GAAAF,WAAA;EACtC,IAAAG,WAAA,GAA8C1C,QAAQ,CAAC,KAAK,CAAC;IAAA2C,WAAA,GAAAxB,cAAA,CAAAuB,WAAA;IAAtDE,eAAe,GAAAD,WAAA;IAAEE,kBAAkB,GAAAF,WAAA;EAAmB,SAE9CG,UAAUA,CAAA;IAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,YAAA;IAAAA,WAAA,GAAAG,iBAAA,CAAzB,aAA4B;MACxB,IAAI9B,KAAK,IAAI,EAAE,EAAE;QACbiB,gBAAgB,CAAC,8BAA8B,CAAC;QAChDJ,cAAc,CAAC,OAAO,CAAC;MAC3B,CAAC,MAAM,IAAIT,KAAK,IAAI,EAAE,EAAE;QACpBa,gBAAgB,CAAC,8BAA8B,CAAC;QAChDJ,cAAc,CAAC,OAAO,CAAC;MAC3B,CAAC,MAAM;QACHI,gBAAgB,CAAC,EAAE,CAAC;QACpBJ,cAAc,CAAC,EAAE,CAAC;QAClB,IAAMkB,SAAS,SAAS3C,KAAK,CAACY,KAAK,EAAEI,KAAK,CAAC;QAC3C,IAAI2B,SAAS,IAAI,SAAS,EAAE;UACxBnC,UAAU,CAACoC,OAAO,CAAC,UAAU,EAAE;YAAEhC,KAAK,EAAEA;UAAM,CAAC,CAAC;QACpD,CAAC,MACGqB,gBAAgB,CAAC,IAAI,CAAC;QAC1BI,kBAAkB,CAAC,0BAA0B,CAAC;QAC9CQ,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;MAC1B;IACJ,CAAC;IAAA,OAAAJ,WAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EACD,OACIpC,KAAA,CAACZ,IAAI;IAACsD,KAAK,EAAE9C,MAAM,CAAC+C,SAAU;IAAAC,QAAA,GAC1B9C,IAAA,CAACR,KAAK;MAACoD,KAAK,EAAE9C,MAAM,CAACiD,MAAO;MACxBC,MAAM,EAAEC,OAAO,2BAA2B;IAAE,CAC/C,CAAC,EACFjD,IAAA,CAACT,IAAI;MAACqD,KAAK,EAAE9C,MAAM,CAACoD,KAAM;MAAAJ,QAAA,EAAC;IAE3B,CAAM,CAAC,EACP9C,IAAA,CAACN,SAAS;MACNyD,KAAK,EAAC,QAAQ;MACdC,KAAK,EAAE3C,KAAM;MACb4C,YAAY,EAAE3C,QAAS;MACvB4C,IAAI,EAAC,UAAU;MACfC,YAAY,EAAC,eAAe;MAC5BC,KAAK,EAAEnC,WAAW,IAAI,OAAQ;MAC9BuB,KAAK,EAAE9C,MAAM,CAAC2D,KAAM;MACpBC,YAAY,EAAC,kBAAkB;MAC/BC,kBAAkB,EAAC,uBAAuB;MAC1CC,SAAS,EAAC;IAAS,CACtB,CAAC,EACDvC,WAAW,IAAI,OAAO,GAAGrB,IAAA,CAACL,UAAU;MAACkE,IAAI,EAAC,OAAO;MAACC,OAAO,EAAEzC,WAAW,IAAI,OAAQ;MAAAyB,QAAA,EAC9ErB;IAAa,CACN,CAAC,GAAG,IAAI,EACpBzB,IAAA,CAACN,SAAS;MACNyD,KAAK,EAAC,OAAO;MACbC,KAAK,EAAEvC,KAAM;MACbwC,YAAY,EAAEvC,QAAS;MACvBwC,IAAI,EAAC,UAAU;MACfE,KAAK,EAAEnC,WAAW,IAAI,OAAQ;MAC9B0C,eAAe,EAAE9C,UAAW;MAC5B+C,KAAK,EACDhE,IAAA,CAACN,SAAS,CAACuE,IAAI;QACXC,IAAI,EAAEjD,UAAU,GAAG,SAAS,GAAG,KAAM;QACrCkD,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMjD,aAAa,CAAC,CAACD,UAAU,CAAC;QAAA;MAAC,CAC7C,CACJ;MACDyC,YAAY,EAAC,kBAAkB;MAC/BC,kBAAkB,EAAC,uBAAuB;MAC1CC,SAAS,EAAC,SAAS;MACnBhB,KAAK,EAAE9C,MAAM,CAAC2D;IAAM,CAAE,CAAC,EAC1BpC,WAAW,IAAI,OAAO,GAAGrB,IAAA,CAACL,UAAU;MAACkE,IAAI,EAAC,OAAO;MAACC,OAAO,EAAEzC,WAAW,IAAI,OAAQ;MAAAyB,QAAA,EAC9ErB;IAAa,CACN,CAAC,GAAG,IAAI,EACpBzB,IAAA,CAACP,gBAAgB;MAACmD,KAAK,EAAE9C,MAAM,CAACsE,KAAM;MAACD,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMhC,UAAU,CAAC,CAAC;MAAA,CAAC;MAAAW,QAAA,EAC/D9C,IAAA,CAACT,IAAI;QAACqD,KAAK,EAAE9C,MAAM,CAACuE,WAAY;QAAAvB,QAAA,EAAC;MAAM,CAAM;IAAC,CAChC,CAAC,EACnB5C,KAAA,CAACX,IAAI;MAACqD,KAAK,EAAE9C,MAAM,CAACwE,KAAM;MAAAxB,QAAA,GAAC,8BACvB,EAAA9C,IAAA,CAACT,IAAI;QAACqD,KAAK,EAAE9C,MAAM,CAACyE,SAAU;QAC1BJ,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAM9D,UAAU,CAACmE,QAAQ,CAAC,WAAW,CAAC;QAAA,CAAC;QAAA1B,QAAA,EAAC;MAAY,CAAM,CAAC;IAAA,CACtE,CAAC,EACP9C,IAAA,CAACJ,QAAQ;MAACkE,OAAO,EAAEjC,aAAc;MAAC4C,SAAS,EAAE,SAAAA,UAAA;QAAA,OAAM3C,gBAAgB,CAAC,KAAK,CAAC;MAAA,CAAC;MAAC4C,QAAQ,EAAE,IAAK;MACvFC,MAAM,EAAE;QACJxB,KAAK,EAAE,IAAI;QACXgB,OAAO,EAAE,SAAAA,QAAA,EAAM;UACXrC,gBAAgB,CAAC,KAAK,CAAC;QAC3B;MACJ,CAAE;MAAAgB,QAAA,EACDb;IAAe,CACV,CAAC;EAAA,CACT,CAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}