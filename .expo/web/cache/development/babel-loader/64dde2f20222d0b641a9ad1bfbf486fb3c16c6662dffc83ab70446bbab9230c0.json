{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { storage } from \"../../config/firebase\";\nimport { ref, uploadBytes } from 'firebase/storage';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Estoque() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    image = _useState2[0],\n    setImage = _useState2[1];\n  var enviarDados = function enviarDados() {\n    var storageRef = ref(storage, 'some-child');\n    uploadBytes(storageRef, file).then(function (snapshot) {\n      console.log('Uploaded a blob or file!');\n    });\n  };\n  var handleUpload = function handleUpload() {\n    var imagemRef = ref(storage, 'imagem');\n    var file = new File(['teste'], '../../../assets/homebg.png', {\n      type: \"image/png\"\n    });\n    uploadBytes(imagemRef, file).then(function (snapshot) {\n      console.log('Uploaded a blob or file!');\n    });\n  };\n  return _jsx(View, {\n    children: _jsx(TouchableOpacity, {\n      onPress: handleUpload,\n      children: _jsx(Text, {\n        children: \"Upload\"\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","storage","ref","uploadBytes","View","TouchableOpacity","Text","useState","jsx","_jsx","Estoque","_useState","_useState2","_slicedToArray","image","setImage","enviarDados","storageRef","file","then","snapshot","console","log","handleUpload","imagemRef","File","type","children","onPress"],"sources":["C:/Users/manel/Documents/Projeto-3-BIM-PMovel-main/src/Componentes/Estoque/Estoque.js"],"sourcesContent":["import React from 'react';\r\nimport { storage } from '../../config/firebase';\r\nimport { ref, uploadBytes } from 'firebase/storage';\r\nimport { View, TouchableOpacity, Text } from 'react-native';\r\nimport { useState } from 'react'\r\n\r\nexport function Estoque() {\r\n    const [ image, setImage ] = useState(\"\")\r\n    \r\n    const enviarDados = () => {\r\n        const storageRef = ref(storage, 'some-child');\r\n\r\n        uploadBytes(storageRef, file).then((snapshot) => {\r\n        console.log('Uploaded a blob or file!');\r\n    });\r\n    }\r\n    const handleUpload = () => {\r\n        const imagemRef = ref(storage, 'imagem')\r\n        const file = new File(['teste'], '../../../assets/homebg.png', {\r\n            type: \"image/png\",\r\n          })\r\n    \r\n        uploadBytes(imagemRef, file).then((snapshot) => {\r\n          console.log('Uploaded a blob or file!');\r\n        });\r\n    };\r\n    \r\n    return (\r\n        <View>\r\n          <TouchableOpacity onPress={handleUpload}>\r\n            <Text>Upload</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n    );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO;AAChB,SAASC,GAAG,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAEpD,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAEhC,OAAO,SAASC,OAAOA,CAAA,EAAG;EACtB,IAAAC,SAAA,GAA4BJ,QAAQ,CAAC,EAAE,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEvB,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtB,IAAMC,UAAU,GAAGf,GAAG,CAACD,OAAO,EAAE,YAAY,CAAC;IAE7CE,WAAW,CAACc,UAAU,EAAEC,IAAI,CAAC,CAACC,IAAI,CAAC,UAACC,QAAQ,EAAK;MACjDC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAC3C,CAAC,CAAC;EACF,CAAC;EACD,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACvB,IAAMC,SAAS,GAAGtB,GAAG,CAACD,OAAO,EAAE,QAAQ,CAAC;IACxC,IAAMiB,IAAI,GAAG,IAAIO,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,4BAA4B,EAAE;MAC3DC,IAAI,EAAE;IACR,CAAC,CAAC;IAEJvB,WAAW,CAACqB,SAAS,EAAEN,IAAI,CAAC,CAACC,IAAI,CAAC,UAACC,QAAQ,EAAK;MAC9CC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACzC,CAAC,CAAC;EACN,CAAC;EAED,OACIb,IAAA,CAACL,IAAI;IAAAuB,QAAA,EACHlB,IAAA,CAACJ,gBAAgB;MAACuB,OAAO,EAAEL,YAAa;MAAAI,QAAA,EACtClB,IAAA,CAACH,IAAI;QAAAqB,QAAA,EAAC;MAAM,CAAM;IAAC,CACH;EAAC,CACf,CAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}