{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput, HelperText, Snackbar } from 'react-native-paper';\nimport { logar } from \"../../servicos/requisicoesFirebase\";\nimport { styles } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function TelaSenha(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var handleLogin = function handleLogin() {\n    if (password === 'sua_senha_secreta') {\n      navigation.navigate('PaginaProtegida');\n    } else {\n      alert('Senha incorreta. Tente novamente.');\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      label: \"Senha\",\n      value: senha,\n      onChangeText: setSenha,\n      mode: \"outlined\",\n      error: statusError == 'senha',\n      secureTextEntry: secureMode,\n      right: _jsx(TextInput.Icon, {\n        icon: secureMode ? 'eye-off' : 'eye',\n        onPress: function onPress() {\n          return setSecureMode(!secureMode);\n        }\n      }),\n      outlineColor: \"rgba(0, 0, 0, 0)\",\n      activeOutlineColor: \"rgba(20, 20, 20, 0.2)\",\n      textColor: \"#141414\",\n      style: styles.input\n    }), _jsx(TouchableOpacity, {\n      title: \"Login\",\n      onPress: handleLogin\n    })]\n  });\n}\n;","map":{"version":3,"names":["useState","View","Text","Image","TouchableOpacity","TextInput","HelperText","Snackbar","logar","styles","jsx","_jsx","jsxs","_jsxs","TelaSenha","_ref","navigation","_useState","_useState2","_slicedToArray","password","setPassword","handleLogin","navigate","alert","children","label","value","senha","onChangeText","setSenha","mode","error","statusError","secureTextEntry","secureMode","right","Icon","icon","onPress","setSecureMode","outlineColor","activeOutlineColor","textColor","style","input","title"],"sources":["C:/Users/manel/Documents/Projeto-3-BIM-PMovel-main/src/Componentes/TelaSenha/TelaSenha.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { View, Text, Image, TouchableOpacity } from \"react-native\";\r\nimport { TextInput, HelperText, Snackbar } from 'react-native-paper';\r\nimport { logar } from \"../../servicos/requisicoesFirebase\";\r\nimport { styles } from \"./styles\"\r\nexport function TelaSenha({ navigation }) {\r\n    const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    if (password === 'sua_senha_secreta') {\r\n      navigation.navigate('PaginaProtegida');\r\n    } else {\r\n      alert('Senha incorreta. Tente novamente.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TextInput\r\n                label=\"Senha\"\r\n                value={senha}\r\n                onChangeText={setSenha}\r\n                mode=\"outlined\"\r\n                error={statusError == 'senha'}\r\n                secureTextEntry={secureMode}\r\n                right={\r\n                    <TextInput.Icon\r\n                        icon={secureMode ? 'eye-off' : 'eye'}\r\n                        onPress={() => setSecureMode(!secureMode)}\r\n                    />\r\n                }\r\n                outlineColor=\"rgba(0, 0, 0, 0)\"\r\n                activeOutlineColor=\"rgba(20, 20, 20, 0.2)\" \r\n                textColor=\"#141414\"\r\n                style={styles.input} />\r\n      <TouchableOpacity title=\"Login\" onPress={handleLogin} />\r\n    </View>\r\n  );\r\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAEjC,SAASC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,oBAAoB;AACpE,SAASC,KAAK;AACd,SAASC,MAAM;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACjC,OAAO,SAASC,SAASA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAClC,IAAAC,SAAA,GAAgCjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE9B,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAIF,QAAQ,KAAK,mBAAmB,EAAE;MACpCJ,UAAU,CAACO,QAAQ,CAAC,iBAAiB,CAAC;IACxC,CAAC,MAAM;MACLC,KAAK,CAAC,mCAAmC,CAAC;IAC5C;EACF,CAAC;EAED,OACEX,KAAA,CAACZ,IAAI;IAAAwB,QAAA,GACHd,IAAA,CAACN,SAAS;MACAqB,KAAK,EAAC,OAAO;MACbC,KAAK,EAAEC,KAAM;MACbC,YAAY,EAAEC,QAAS;MACvBC,IAAI,EAAC,UAAU;MACfC,KAAK,EAAEC,WAAW,IAAI,OAAQ;MAC9BC,eAAe,EAAEC,UAAW;MAC5BC,KAAK,EACDzB,IAAA,CAACN,SAAS,CAACgC,IAAI;QACXC,IAAI,EAAEH,UAAU,GAAG,SAAS,GAAG,KAAM;QACrCI,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMC,aAAa,CAAC,CAACL,UAAU,CAAC;QAAA;MAAC,CAC7C,CACJ;MACDM,YAAY,EAAC,kBAAkB;MAC/BC,kBAAkB,EAAC,uBAAuB;MAC1CC,SAAS,EAAC,SAAS;MACnBC,KAAK,EAAEnC,MAAM,CAACoC;IAAM,CAAE,CAAC,EACjClC,IAAA,CAACP,gBAAgB;MAAC0C,KAAK,EAAC,OAAO;MAACP,OAAO,EAAEjB;IAAY,CAAE,CAAC;EAAA,CACpD,CAAC;AAEX;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}