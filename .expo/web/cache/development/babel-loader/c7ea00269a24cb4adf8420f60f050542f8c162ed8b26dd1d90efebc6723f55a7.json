{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { React, useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ref, listAll, getDownloadURL } from 'firebase/storage';\nimport { storage } from \"../../config/firebase.js\";\nimport { styles } from \"./styles.js\";\nimport * as Font from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function mainPage() {\n  useEffect(function () {\n    function loadFonts() {\n      return _loadFonts.apply(this, arguments);\n    }\n    function _loadFonts() {\n      _loadFonts = _asyncToGenerator(function* () {\n        yield Font.loadAsync({\n          'Raleway-Italic': require(\"./assets/fonts/Raleway-Italic.ttf\")\n        });\n      });\n      return _loadFonts.apply(this, arguments);\n    }\n    loadFonts();\n  }, []);\n  var _useFonts = useFonts({\n      'Raleway-Italic': require(\"./assets/fonts/Raleway-Italic.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    imageList = _useState2[0],\n    setImageList = _useState2[1];\n  useEffect(function () {\n    var fetchImageList = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var storageRef = ref(storage, '/natura/');\n          var imageListResult = yield listAll(storageRef);\n          var promises = imageListResult.items.map(function () {\n            var _ref2 = _asyncToGenerator(function* (imageRef) {\n              var imageUrl = yield getDownloadURL(imageRef);\n              return {\n                imageUrl: imageUrl\n              };\n            });\n            return function (_x) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n          var resolvedPromises = yield Promise.all(promises);\n          setImageList(resolvedPromises);\n        } catch (error) {\n          console.error('Error fetching image list:', error);\n        }\n      });\n      return function fetchImageList() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchImageList();\n  }, []);\n  return _jsx(ScrollView, {\n    horizontal: true,\n    children: _jsx(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: imageList.map(function (item, index) {\n        return _jsxs(View, {\n          style: {\n            margin: 10\n          },\n          children: [_jsx(Image, {\n            source: {\n              uri: item.imageUrl\n            },\n            style: {\n              width: 148,\n              height: 184,\n              borderRadius: 8\n            }\n          }), _jsx(Text, {\n            style: {\n              fontSize: 11,\n              color: \"#9B9B9B\",\n              fontFamily: \"Raleway-Italic\"\n            },\n            children: \"Natura\"\n          }), _jsx(Text, {\n            children: \"NomeNome\"\n          })]\n        }, index);\n      })\n    })\n  });\n}\n;","map":{"version":3,"names":["React","useState","useEffect","ScrollView","Image","Text","View","ref","listAll","getDownloadURL","storage","styles","Font","jsx","_jsx","jsxs","_jsxs","mainPage","loadFonts","_loadFonts","apply","arguments","_asyncToGenerator","loadAsync","require","_useFonts","useFonts","_useFonts2","_slicedToArray","fontsLoaded","_useState","_useState2","imageList","setImageList","fetchImageList","_ref","storageRef","imageListResult","promises","items","map","_ref2","imageRef","imageUrl","_x","resolvedPromises","Promise","all","error","console","horizontal","children","style","flexDirection","item","index","margin","source","uri","width","height","borderRadius","fontSize","color","fontFamily"],"sources":["C:/Users/manel/Documents/Projeto-3-BIM-PMovel-main/src/Componentes/mainPage/mainPage.js"],"sourcesContent":["import {React, useState, useEffect } from 'react';\r\nimport { ScrollView, Image, Text, View } from 'react-native';\r\nimport { ref, listAll, getDownloadURL } from 'firebase/storage';\r\nimport { storage } from '../../config/firebase.js';\r\nimport { styles } from './styles.js'\r\nimport * as Font from 'expo-font';\r\n\r\nexport function mainPage() {\r\n\tuseEffect(() => {\r\n\t\tasync function loadFonts() {\r\n\t\t  await Font.loadAsync({\r\n\t\t\t'Raleway-Italic': require('./assets/fonts/Raleway-Italic.ttf'),\r\n\t\t  });\r\n\t\t}\r\n\t\r\n\t\tloadFonts();\r\n\t  }, []);\r\n\tconst [fontsLoaded] = useFonts({\r\n\t\t'Raleway-Italic': require('./assets/fonts/Raleway-Italic.ttf'),\r\n\t});\r\n\tconst [imageList, setImageList] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchImageList = async () => {\r\n\t\ttry {\r\n\t\t\tconst storageRef = ref(storage, '/natura/');\r\n\r\n\t\t\tconst imageListResult = await listAll(storageRef);\r\n\t\t\tconst promises = imageListResult.items.map(async (imageRef) => {\r\n\t\t\tconst imageUrl = await getDownloadURL(imageRef);\r\n\t\t\treturn { imageUrl };\r\n\t\t\t});\r\n\r\n\t\t\tconst resolvedPromises = await Promise.all(promises);\r\n\t\t\tsetImageList(resolvedPromises);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error fetching image list:', error);\r\n\t\t}\r\n\t\t};\r\n\r\n\t\tfetchImageList();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<ScrollView horizontal={true}>\r\n\t\t<View style={{ flexDirection: 'row' }}>\r\n\t\t\t{imageList.map((item, index) => (\r\n\t\t\t<View key={index} style={{ margin: 10 }}>\r\n\t\t\t\t<Image source={{ uri: item.imageUrl }} style={{ width: 148, height: 184, borderRadius: 8 }} />\r\n\t\t\t\t<Text style={{fontSize: 11, color: \"#9B9B9B\", fontFamily: \"Raleway-Italic\"}}>Natura</Text>\r\n\t\t\t\t<Text>NomeNome</Text>\r\n\t\t\t</View>\r\n\t\t\t))}\r\n\t\t</View>\r\n\t\t</ScrollView>\r\n\t);\r\n\t};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}