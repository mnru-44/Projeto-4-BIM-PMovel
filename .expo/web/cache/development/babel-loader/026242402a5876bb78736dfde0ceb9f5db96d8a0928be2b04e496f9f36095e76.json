{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { React, useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ref, listAll, getDownloadURL } from 'firebase/storage';\nimport { storage } from \"../config/firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function ImageScrollView() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    imageList = _useState2[0],\n    setImageList = _useState2[1];\n  useEffect(function () {\n    var fetchImageList = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var storageRef = ref(storage, 'caminho/da/sua/pasta');\n          var imageListResult = yield listAll(storageRef);\n          var promises = imageListResult.items.map(function () {\n            var _ref2 = _asyncToGenerator(function* (imageRef) {\n              var imageUrl = yield getDownloadURL(imageRef);\n              return {\n                imageUrl: imageUrl\n              };\n            });\n            return function (_x) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n          var resolvedPromises = yield Promise.all(promises);\n          setImageList(resolvedPromises);\n        } catch (error) {\n          console.error('Error fetching image list:', error);\n        }\n      });\n      return function fetchImageList() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchImageList();\n  }, []);\n  return _jsx(ScrollView, {\n    horizontal: true,\n    children: _jsx(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: imageList.map(function (item, index) {\n        return _jsx(View, {\n          style: {\n            margin: 10\n          },\n          children: _jsx(Image, {\n            source: {\n              uri: item.imageUrl\n            },\n            style: {\n              width: 200,\n              height: 200\n            }\n          })\n        }, index);\n      })\n    })\n  });\n}\n;","map":{"version":3,"names":["React","useState","useEffect","ScrollView","Image","Text","View","ref","listAll","getDownloadURL","storage","jsx","_jsx","ImageScrollView","_useState","_useState2","_slicedToArray","imageList","setImageList","fetchImageList","_ref","_asyncToGenerator","storageRef","imageListResult","promises","items","map","_ref2","imageRef","imageUrl","_x","apply","arguments","resolvedPromises","Promise","all","error","console","horizontal","children","style","flexDirection","item","index","margin","source","uri","width","height"],"sources":["C:/Users/manel/Documents/Projeto-3-BIM-PMovel-main/src/Componentes/mainPage/mainPage.js"],"sourcesContent":["import {React, useState, useEffect } from 'react';\r\nimport { ScrollView, Image, Text, View } from 'react-native';\r\nimport { ref, listAll, getDownloadURL } from 'firebase/storage';\r\nimport { storage } from '../config/firebase'\r\n\r\nexport function ImageScrollView() {\r\n  const [imageList, setImageList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchImageList = async () => {\r\n      try {\r\n        const storageRef = ref(storage, 'caminho/da/sua/pasta'); // Substitua pelo caminho real da sua pasta\r\n\r\n        const imageListResult = await listAll(storageRef);\r\n        const promises = imageListResult.items.map(async (imageRef) => {\r\n          const imageUrl = await getDownloadURL(imageRef);\r\n          return { imageUrl };\r\n        });\r\n\r\n        const resolvedPromises = await Promise.all(promises);\r\n        setImageList(resolvedPromises);\r\n      } catch (error) {\r\n        console.error('Error fetching image list:', error);\r\n      }\r\n    };\r\n\r\n    fetchImageList();\r\n  }, []);\r\n\r\n  return (\r\n    <ScrollView horizontal>\r\n      <View style={{ flexDirection: 'row' }}>\r\n        {imageList.map((item, index) => (\r\n          <View key={index} style={{ margin: 10 }}>\r\n            <Image source={{ uri: item.imageUrl }} style={{ width: 200, height: 200 }} />\r\n            {/* Pode adicionar mais informações ou estilizar conforme necessário */}\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};"],"mappings":";;AAAA,SAAQA,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAElD,SAASC,GAAG,EAAEC,OAAO,EAAEC,cAAc,QAAQ,kBAAkB;AAC/D,SAASC,OAAO;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAE5C,OAAO,SAASC,eAAeA,CAAA,EAAG;EAChC,IAAAC,SAAA,GAAkCb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9Bb,SAAS,CAAC,YAAM;IACd,IAAMiB,cAAc;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QACjC,IAAI;UACF,IAAMC,UAAU,GAAGf,GAAG,CAACG,OAAO,EAAE,sBAAsB,CAAC;UAEvD,IAAMa,eAAe,SAASf,OAAO,CAACc,UAAU,CAAC;UACjD,IAAME,QAAQ,GAAGD,eAAe,CAACE,KAAK,CAACC,GAAG;YAAA,IAAAC,KAAA,GAAAN,iBAAA,CAAC,WAAOO,QAAQ,EAAK;cAC7D,IAAMC,QAAQ,SAASpB,cAAc,CAACmB,QAAQ,CAAC;cAC/C,OAAO;gBAAEC,QAAQ,EAARA;cAAS,CAAC;YACrB,CAAC;YAAA,iBAAAC,EAAA;cAAA,OAAAH,KAAA,CAAAI,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;UAEF,IAAMC,gBAAgB,SAASC,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;UACpDN,YAAY,CAACe,gBAAgB,CAAC;QAChC,CAAC,CAAC,OAAOG,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QACpD;MACF,CAAC;MAAA,gBAfKjB,cAAcA,CAAA;QAAA,OAAAC,IAAA,CAAAW,KAAA,OAAAC,SAAA;MAAA;IAAA,GAenB;IAEDb,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,OACEP,IAAA,CAACT,UAAU;IAACmC,UAAU;IAAAC,QAAA,EACpB3B,IAAA,CAACN,IAAI;MAACkC,KAAK,EAAE;QAAEC,aAAa,EAAE;MAAM,CAAE;MAAAF,QAAA,EACnCtB,SAAS,CAACS,GAAG,CAAC,UAACgB,IAAI,EAAEC,KAAK;QAAA,OACzB/B,IAAA,CAACN,IAAI;UAAakC,KAAK,EAAE;YAAEI,MAAM,EAAE;UAAG,CAAE;UAAAL,QAAA,EACtC3B,IAAA,CAACR,KAAK;YAACyC,MAAM,EAAE;cAAEC,GAAG,EAAEJ,IAAI,CAACb;YAAS,CAAE;YAACW,KAAK,EAAE;cAAEO,KAAK,EAAE,GAAG;cAAEC,MAAM,EAAE;YAAI;UAAE,CAAE;QAAC,GADpEL,KAGL,CAAC;MAAA,CACR;IAAC,CACE;EAAC,CACG,CAAC;AAEjB;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}