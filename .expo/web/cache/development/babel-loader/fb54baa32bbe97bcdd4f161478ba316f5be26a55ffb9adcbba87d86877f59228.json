{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { createUserWithEmailAndPassword, AuthErrorCodes, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth, db } from \"../config/firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nfunction errosFirebase(error) {\n  var mensagem = '';\n  switch (error.code) {\n    case AuthErrorCodes.EMAIL_EXISTS:\n      mensagem = 'Esse email já está em uso';\n      break;\n    case AuthErrorCodes.INVALID_EMAIL:\n      mensagem = 'E-mail inválido';\n      break;\n    case AuthErrorCodes.WEAK_PASSWORD:\n      mensagem = 'A senha precisa do no mínimo 6 caracteres';\n      break;\n    default:\n      mensagem = 'Erro desconhecido';\n  }\n  return mensagem;\n}\nexport function cadastrar(_x, _x2) {\n  return _cadastrar.apply(this, arguments);\n}\nfunction _cadastrar() {\n  _cadastrar = _asyncToGenerator(function* (email, senha) {\n    var resultado = yield createUserWithEmailAndPassword(auth, email, senha).then(function () {\n      return \"sucesso\";\n    }).catch(function (error) {\n      return errosFirebase(error);\n    });\n    return resultado;\n  });\n  return _cadastrar.apply(this, arguments);\n}\nawait addDoc(collection(db, 'usuarios'), data);\nexport function logar(_x3, _x4) {\n  return _logar.apply(this, arguments);\n}\nfunction _logar() {\n  _logar = _asyncToGenerator(function* (email, senha) {\n    var resultado = yield signInWithEmailAndPassword(auth, email, senha).then(function (dadosDoUsuario) {\n      var data = {\n        nome: nome,\n        pasta: pasta.toUpperCase(),\n        preco: preco,\n        tipo: tipo.toUpperCase(),\n        imageUrl: downloadURL\n      };\n      console.log(dadosDoUsuario);\n      return \"sucesso\";\n    }).catch(function (error) {\n      console.log(error);\n      return \"Erro ao logar\";\n    });\n    return resultado;\n  });\n  return _logar.apply(this, arguments);\n}","map":{"version":3,"names":["createUserWithEmailAndPassword","AuthErrorCodes","signInWithEmailAndPassword","auth","db","collection","addDoc","errosFirebase","error","mensagem","code","EMAIL_EXISTS","INVALID_EMAIL","WEAK_PASSWORD","cadastrar","_x","_x2","_cadastrar","apply","arguments","_asyncToGenerator","email","senha","resultado","then","catch","data","logar","_x3","_x4","_logar","dadosDoUsuario","nome","pasta","toUpperCase","preco","tipo","imageUrl","downloadURL","console","log"],"sources":["C:/Users/manel/Documents/Projeto-3-BIM-PMovel-main/src/servicos/requisicoesFirebase.js"],"sourcesContent":["\nimport { createUserWithEmailAndPassword, AuthErrorCodes, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth, db } from \"../config/firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\n\nfunction errosFirebase(error) {\n    let mensagem = ''\n    switch (error.code) {\n        case AuthErrorCodes.EMAIL_EXISTS:\n            mensagem = 'Esse email já está em uso'\n            break;\n        case AuthErrorCodes.INVALID_EMAIL:\n            mensagem = 'E-mail inválido'\n            break;\n        case AuthErrorCodes.WEAK_PASSWORD:\n            mensagem = 'A senha precisa do no mínimo 6 caracteres'\n            break;\n        default:\n            mensagem = 'Erro desconhecido'\n    }\n    return mensagem\n}\n\nexport async function cadastrar(email, senha) {\n    const resultado = await createUserWithEmailAndPassword(auth, email, senha)\n        .then(() => {\n            return \"sucesso\"\n        })\n        .catch((error) => {\n            return errosFirebase(error)\n        })\n    return resultado\n}\n\n\nawait addDoc(collection(db, 'usuarios'), data)\n\nexport async function logar(email, senha) {\n    const resultado = await signInWithEmailAndPassword(auth, email, senha)\n        .then((dadosDoUsuario) => {\n            const data = {\n                nome,\n                pasta: pasta.toUpperCase(),\n                preco,\n                tipo: tipo.toUpperCase(),\n                imageUrl: downloadURL,\n            }\n            console.log(dadosDoUsuario)\n            return \"sucesso\"\n        })\n        .catch((error) => {\n            console.log(error)\n            return \"Erro ao logar\"\n        })\n    return resultado\n}"],"mappings":";AACA,SAASA,8BAA8B,EAAEC,cAAc,EAAEC,0BAA0B,QAAQ,eAAe;AAC1G,SAASC,IAAI,EAAEC,EAAE;AACjB,SAASC,UAAU,EAAEC,MAAM,QAAQ,oBAAoB;AAEvD,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC1B,IAAIC,QAAQ,GAAG,EAAE;EACjB,QAAQD,KAAK,CAACE,IAAI;IACd,KAAKT,cAAc,CAACU,YAAY;MAC5BF,QAAQ,GAAG,2BAA2B;MACtC;IACJ,KAAKR,cAAc,CAACW,aAAa;MAC7BH,QAAQ,GAAG,iBAAiB;MAC5B;IACJ,KAAKR,cAAc,CAACY,aAAa;MAC7BJ,QAAQ,GAAG,2CAA2C;MACtD;IACJ;MACIA,QAAQ,GAAG,mBAAmB;EACtC;EACA,OAAOA,QAAQ;AACnB;AAEA,gBAAsBK,SAASA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAS9B,SAAAF,WAAA;EAAAA,UAAA,GAAAG,iBAAA,CATM,WAAyBC,KAAK,EAAEC,KAAK,EAAE;IAC1C,IAAMC,SAAS,SAASvB,8BAA8B,CAACG,IAAI,EAAEkB,KAAK,EAAEC,KAAK,CAAC,CACrEE,IAAI,CAAC,YAAM;MACR,OAAO,SAAS;IACpB,CAAC,CAAC,CACDC,KAAK,CAAC,UAACjB,KAAK,EAAK;MACd,OAAOD,aAAa,CAACC,KAAK,CAAC;IAC/B,CAAC,CAAC;IACN,OAAOe,SAAS;EACpB,CAAC;EAAA,OAAAN,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAGD,MAAMb,MAAM,CAACD,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,EAAEsB,IAAI,CAAC;AAE9C,gBAAsBC,KAAKA,CAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,MAAA,CAAAZ,KAAA,OAAAC,SAAA;AAAA;AAkB1B,SAAAW,OAAA;EAAAA,MAAA,GAAAV,iBAAA,CAlBM,WAAqBC,KAAK,EAAEC,KAAK,EAAE;IACtC,IAAMC,SAAS,SAASrB,0BAA0B,CAACC,IAAI,EAAEkB,KAAK,EAAEC,KAAK,CAAC,CACjEE,IAAI,CAAC,UAACO,cAAc,EAAK;MACtB,IAAML,IAAI,GAAG;QACTM,IAAI,EAAJA,IAAI;QACJC,KAAK,EAAEA,KAAK,CAACC,WAAW,CAAC,CAAC;QAC1BC,KAAK,EAALA,KAAK;QACLC,IAAI,EAAEA,IAAI,CAACF,WAAW,CAAC,CAAC;QACxBG,QAAQ,EAAEC;MACd,CAAC;MACDC,OAAO,CAACC,GAAG,CAACT,cAAc,CAAC;MAC3B,OAAO,SAAS;IACpB,CAAC,CAAC,CACDN,KAAK,CAAC,UAACjB,KAAK,EAAK;MACd+B,OAAO,CAACC,GAAG,CAAChC,KAAK,CAAC;MAClB,OAAO,eAAe;IAC1B,CAAC,CAAC;IACN,OAAOe,SAAS;EACpB,CAAC;EAAA,OAAAO,MAAA,CAAAZ,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}