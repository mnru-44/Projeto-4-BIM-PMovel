{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { React, useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ref, listAll, getDownloadURL } from 'firebase/storage';\nimport { storage } from \"../../config/firebase.js\";\nimport { styles } from \"./styles.js\";\nimport { useFonts } from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function mainPage() {\n  var _useFonts = useFonts({\n      'Raleway-Regular': require(\"../../../assets/fonts/Raleway-Regular.ttf\"),\n      'Raleway-ThinItalic': require(\"../../../assets/fonts/Raleway-ThinItalic.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    imageList = _useState2[0],\n    setImageList = _useState2[1];\n  useEffect(function () {\n    var fetchImageList = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var storageRef = ref(storage, '/natura/');\n          var imageListResult = yield listAll(storageRef);\n          var promises = imageListResult.items.map(function () {\n            var _ref2 = _asyncToGenerator(function* (imageRef) {\n              var imageUrl = yield getDownloadURL(imageRef);\n              return {\n                imageUrl: imageUrl\n              };\n            });\n            return function (_x) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n          var resolvedPromises = yield Promise.all(promises);\n          setImageList(resolvedPromises);\n        } catch (error) {\n          console.error('Error fetching image list:', error);\n        }\n      });\n      return function fetchImageList() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchImageList();\n  }, []);\n  return _jsx(ScrollView, {\n    horizontal: true,\n    children: _jsx(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: imageList.map(function (item, index) {\n        return _jsxs(View, {\n          style: {\n            margin: 10\n          },\n          children: [_jsx(Image, {\n            source: {\n              uri: item.imageUrl\n            },\n            style: {\n              width: 148,\n              height: 184,\n              borderRadius: 8\n            }\n          }), _jsx(Text, {\n            style: {\n              fontSize: 11,\n              color: \"#9B9B9B\",\n              fontFamily: \"Raleway-Regular\",\n              marginTop: 26\n            },\n            children: \"Natura\"\n          }), _jsx(Text, {\n            style: {\n              fontSize: 16,\n              color: \"#222222\",\n              fontFamily: \"Raleway-ThinItalic\",\n              marginTop: 4\n            },\n            children: \"NomeNome\"\n          })]\n        }, index);\n      })\n    })\n  });\n}\n;","map":{"version":3,"names":["React","useState","useEffect","ScrollView","Image","Text","View","ref","listAll","getDownloadURL","storage","styles","useFonts","jsx","_jsx","jsxs","_jsxs","mainPage","_useFonts","require","_useFonts2","_slicedToArray","fontsLoaded","_useState","_useState2","imageList","setImageList","fetchImageList","_ref","_asyncToGenerator","storageRef","imageListResult","promises","items","map","_ref2","imageRef","imageUrl","_x","apply","arguments","resolvedPromises","Promise","all","error","console","horizontal","children","style","flexDirection","item","index","margin","source","uri","width","height","borderRadius","fontSize","color","fontFamily","marginTop"],"sources":["C:/Users/manel/Documents/Projeto-3-BIM-PMovel-main/src/Componentes/mainPage/mainPage.js"],"sourcesContent":["import {React, useState, useEffect } from 'react';\r\nimport { ScrollView, Image, Text, View } from 'react-native';\r\nimport { ref, listAll, getDownloadURL } from 'firebase/storage';\r\nimport { storage } from '../../config/firebase.js';\r\nimport { styles } from './styles.js'\r\nimport { useFonts } from 'expo-font';\r\n\r\nexport function mainPage() {\r\n\tconst [fontsLoaded] = useFonts({\r\n\t\t'Raleway-Regular': require('../../../assets/fonts/Raleway-Regular.ttf'),\r\n\t\t'Raleway-ThinItalic': require('../../../assets/fonts/Raleway-ThinItalic.ttf'),\r\n\t});\r\n\tconst [imageList, setImageList] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchImageList = async () => {\r\n\t\ttry {\r\n\t\t\tconst storageRef = ref(storage, '/natura/');\r\n\r\n\t\t\tconst imageListResult = await listAll(storageRef);\r\n\t\t\tconst promises = imageListResult.items.map(async (imageRef) => {\r\n\t\t\tconst imageUrl = await getDownloadURL(imageRef);\r\n\t\t\treturn { imageUrl };\r\n\t\t\t});\r\n\r\n\t\t\tconst resolvedPromises = await Promise.all(promises);\r\n\t\t\tsetImageList(resolvedPromises);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error fetching image list:', error);\r\n\t\t}\r\n\t\t};\r\n\r\n\t\tfetchImageList();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<ScrollView horizontal={true}>\r\n\t\t<View style={{ flexDirection: 'row' }}>\r\n\t\t\t{imageList.map((item, index) => (\r\n\t\t\t<View key={index} style={{ margin: 10 }}>\r\n\t\t\t\t<Image source={{ uri: item.imageUrl }} style={{ width: 148, height: 184, borderRadius: 8 }} />\r\n\t\t\t\t<Text style={{fontSize: 11, color: \"#9B9B9B\", fontFamily: \"Raleway-Regular\", marginTop: 26}}>Natura</Text>\r\n\t\t\t\t<Text style={{fontSize: 16, color: \"#222222\", fontFamily: \"Raleway-ThinItalic\", marginTop: 4}}>NomeNome</Text>\r\n\t\t\t</View>\r\n\t\t\t))}\r\n\t\t</View>\r\n\t\t</ScrollView>\r\n\t);\r\n\t};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}