{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { storage, db } from \"../../config/firebase\";\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { collection, addDoc } from \"firebase/firestore\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput } from 'react-native-paper';\nimport { useState } from 'react';\nimport { styles } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Estoque() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    nome = _useState2[0],\n    setNome = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pasta = _useState4[0],\n    setPasta = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    preco = _useState6[0],\n    setPreco = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    image = _useState8[0],\n    setImage = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    previewUrl = _useState10[0],\n    setPreviewUrl = _useState10[1];\n  var enviarDados = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (image) {\n        if (isNaN(preco)) {\n          alert('O preço deve ser um número');\n        } else {\n          var storageRef = ref(storage, `${pasta}/${nome}`);\n          var upload = uploadBytes(storageRef, image).then(function (snapshot) {\n            console.log('Produto no server!');\n          }).catch(function (erro) {\n            console.log(erro.message);\n          });\n          yield upload;\n          var imageref = ref(storage, `${pasta}/${nome}`);\n          var downloadURL = yield getDownloadURL(imageref);\n          var data = {\n            nome: nome,\n            pasta: pasta,\n            preco: preco,\n            imageUrl: downloadURL\n          };\n          yield addDoc(collection(db, 'produtos'), data);\n        }\n      } else {\n        console.log('Nenhuma imagem selecionada.');\n      }\n    });\n    return function enviarDados() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleChange = function handleChange(e) {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n      setPreviewUrl(URL.createObjectURL(e.target.files[0]));\n    }\n  };\n  var nomeChange = function nomeChange(e) {\n    setNome(e);\n  };\n  var pastaChange = function pastaChange(e) {\n    setPasta(e);\n  };\n  var precoChange = function precoChange(e) {\n    setPreco(e);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: _jsx(\"label\", {\n        stylehtmlFor: \"file\",\n        children: \"Selecionar imagem:\"\n      })\n    }), _jsx(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      id: \"file\",\n      onChange: handleChange,\n      style: {\n        display: 'none'\n      }\n    }), previewUrl && _jsx(Image, {\n      source: {\n        uri: previewUrl\n      },\n      style: {\n        width: 200,\n        height: 200\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      label: \"Nome do Produto\",\n      mode: \"outlined\",\n      outlineColor: \"rgba(0, 0, 0, 0)\",\n      activeOutlineColor: \"rgba(20, 20, 20, 0.2)\",\n      textColor: \"#141414\",\n      value: nome,\n      onChangeText: nomeChange\n    }), _jsx(TextInput, {\n      style: styles.input,\n      label: \"Marca\",\n      mode: \"outlined\",\n      outlineColor: \"rgba(0, 0, 0, 0)\",\n      activeOutlineColor: \"rgba(20, 20, 20, 0.2)\",\n      textColor: \"#141414\",\n      value: pasta,\n      onChangeText: pastaChange\n    }), _jsx(TextInput, {\n      style: styles.input,\n      label: \"Pre\\xE7o\",\n      keyboardType: \"decimal-pad\",\n      mode: \"outlined\",\n      outlineColor: \"rgba(0, 0, 0, 0)\",\n      activeOutlineColor: \"rgba(20, 20, 20, 0.2)\",\n      textColor: \"#141414\",\n      value: preco,\n      onChangeText: precoChange\n    }), _jsx(TouchableOpacity, {\n      style: styles.botao,\n      onPress: enviarDados,\n      children: _jsx(Text, {\n        style: styles.textoButton,\n        children: \"Upload\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","storage","db","ref","uploadBytes","getDownloadURL","collection","addDoc","View","TouchableOpacity","Text","Image","TextInput","useState","styles","jsx","_jsx","jsxs","_jsxs","Estoque","_useState","_useState2","_slicedToArray","nome","setNome","_useState3","_useState4","pasta","setPasta","_useState5","_useState6","preco","setPreco","_useState7","_useState8","image","setImage","_useState9","_useState10","previewUrl","setPreviewUrl","enviarDados","_ref","_asyncToGenerator","isNaN","alert","storageRef","upload","then","snapshot","console","log","catch","erro","message","imageref","downloadURL","data","imageUrl","apply","arguments","handleChange","e","target","files","URL","createObjectURL","nomeChange","pastaChange","precoChange","style","container","children","stylehtmlFor","type","name","id","onChange","display","source","uri","width","height","input","label","mode","outlineColor","activeOutlineColor","textColor","value","onChangeText","keyboardType","botao","onPress","textoButton"],"sources":["C:/Users/manel/Documents/Projeto-3-BIM-PMovel-main/src/Componentes/Estoque/Estoque.js"],"sourcesContent":["import React from 'react';\r\nimport { storage, db } from '../../config/firebase';\r\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { View, TouchableOpacity, Text, Image } from 'react-native';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { useState } from 'react';\r\nimport { styles } from \"./styles\";\r\n\r\nexport function Estoque() {\r\n    const [nome, setNome] = useState(\"\")\r\n    const [pasta, setPasta] = useState(\"\")\r\n    const [preco, setPreco] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [previewUrl, setPreviewUrl] = useState(\"\");\r\n\r\n    const enviarDados = async () => {\r\n        if (image) {\r\n            if (isNaN(preco)) {\r\n                alert('O preço deve ser um número')\r\n            }\r\n\r\n            else {\r\n                const storageRef = ref(storage, `${pasta}/${nome}`);\r\n\r\n                const upload = uploadBytes(storageRef, image)\r\n                    .then((snapshot) => {\r\n                        console.log('Produto no server!');\r\n                    })\r\n                    .catch((erro) => {\r\n                        console.log(erro.message);\r\n                    });\r\n                \r\n                \r\n                await upload;\r\n\r\n                const imageref = ref(storage, `${pasta}/${nome}`)\r\n                const downloadURL = await getDownloadURL(imageref);\r\n\r\n                const data = {\r\n                    nome,\r\n                    pasta,\r\n                    preco,\r\n                    imageUrl: downloadURL,\r\n                }\r\n                await addDoc(collection(db, 'produtos'), data)\r\n            }\r\n            \r\n        } else {\r\n            console.log('Nenhuma imagem selecionada.');\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.files[0]) {\r\n            setImage(e.target.files[0]);\r\n            setPreviewUrl(URL.createObjectURL(e.target.files[0]));\r\n        }\r\n        \r\n    };\r\n\r\n    const nomeChange = (e) => {\r\n        setNome(e)\r\n    };\r\n    const pastaChange = (e) => {\r\n        setPasta(e)\r\n    };\r\n    const precoChange = (e) => {\r\n        setPreco(e)\r\n    };\r\n    \r\n    return (\r\n        <View style={styles.container}>\r\n            <Text><label stylehtmlFor=\"file\">Selecionar imagem:</label></Text>\r\n            <input type='file' name='file' id='file' onChange={handleChange} style={{display: 'none'}}/>\r\n            {previewUrl && <Image source={{ uri: previewUrl }} style={{ width: 200, height: 200 }} />}\r\n            <TextInput \r\n                style={styles.input} \r\n                label=\"Nome do Produto\"\r\n                mode=\"outlined\"\r\n                outlineColor=\"rgba(0, 0, 0, 0)\"\r\n                activeOutlineColor=\"rgba(20, 20, 20, 0.2)\" \r\n                textColor=\"#141414\"\r\n                value={nome}\r\n                onChangeText={nomeChange}></TextInput>\r\n\r\n            <TextInput \r\n                style={styles.input} \r\n                label=\"Marca\"\r\n                mode=\"outlined\"\r\n                outlineColor=\"rgba(0, 0, 0, 0)\"\r\n                activeOutlineColor=\"rgba(20, 20, 20, 0.2)\" \r\n                textColor=\"#141414\"\r\n                value={pasta}\r\n                onChangeText={pastaChange}></TextInput>\r\n\r\n            <TextInput \r\n                style={styles.input} \r\n                label=\"Preço\"\r\n                keyboardType=\"decimal-pad\"\r\n                mode=\"outlined\"\r\n                outlineColor=\"rgba(0, 0, 0, 0)\"\r\n                activeOutlineColor=\"rgba(20, 20, 20, 0.2)\" \r\n                textColor=\"#141414\"\r\n                value={preco}\r\n                onChangeText={precoChange}></TextInput>\r\n\r\n            <TouchableOpacity style={styles.botao} onPress={enviarDados}>\r\n                <Text style={styles.textoButton}>Upload</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}