{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { createUserWithEmailAndPassword, AuthErrorCodes, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth, db } from \"../config/firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nfunction errosFirebase(error) {\n  var mensagem = '';\n  switch (error.code) {\n    case AuthErrorCodes.EMAIL_EXISTS:\n      mensagem = 'Esse email já está em uso';\n      break;\n    case AuthErrorCodes.INVALID_EMAIL:\n      mensagem = 'E-mail inválido';\n      break;\n    case AuthErrorCodes.WEAK_PASSWORD:\n      mensagem = 'A senha precisa do no mínimo 6 caracteres';\n      break;\n    default:\n      mensagem = 'Erro desconhecido';\n  }\n  return mensagem;\n}\nexport function cadastrar(_x, _x2, _x3) {\n  return _cadastrar.apply(this, arguments);\n}\nfunction _cadastrar() {\n  _cadastrar = _asyncToGenerator(function* (nome, email, senha) {\n    var resultado = yield createUserWithEmailAndPassword(auth, email, senha).then(function (dados) {\n      var data = {\n        nome: nome,\n        email: dados.user.email\n      };\n      addDoc(collection(db, 'usuarios'), data);\n      return \"sucesso\";\n    }).catch(function (error) {\n      return errosFirebase(error);\n    });\n    return resultado;\n  });\n  return _cadastrar.apply(this, arguments);\n}\nexport function logar(_x4, _x5) {\n  return _logar.apply(this, arguments);\n}\nfunction _logar() {\n  _logar = _asyncToGenerator(function* (email, senha) {\n    var resultado = yield signInWithEmailAndPassword(auth, email, senha).then(function (dadosDoUsuario) {\n      console.log(dadosDoUsuario);\n      return \"sucesso\";\n    }).catch(function (error) {\n      console.log(error);\n      return \"Erro ao logar\";\n    });\n    return resultado;\n  });\n  return _logar.apply(this, arguments);\n}","map":{"version":3,"names":["createUserWithEmailAndPassword","AuthErrorCodes","signInWithEmailAndPassword","auth","db","collection","addDoc","errosFirebase","error","mensagem","code","EMAIL_EXISTS","INVALID_EMAIL","WEAK_PASSWORD","cadastrar","_x","_x2","_x3","_cadastrar","apply","arguments","_asyncToGenerator","nome","email","senha","resultado","then","dados","data","user","catch","logar","_x4","_x5","_logar","dadosDoUsuario","console","log"],"sources":["C:/Users/manel/Documents/PROJETO - PMOVEL - 4BIM/src/servicos/requisicoesFirebase.js"],"sourcesContent":["\r\nimport { createUserWithEmailAndPassword, AuthErrorCodes, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth, db } from \"../config/firebase\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\n\r\nfunction errosFirebase(error) {\r\n    let mensagem = ''\r\n    switch (error.code) {\r\n        case AuthErrorCodes.EMAIL_EXISTS:\r\n            mensagem = 'Esse email já está em uso'\r\n            break;\r\n        case AuthErrorCodes.INVALID_EMAIL:\r\n            mensagem = 'E-mail inválido'\r\n            break;\r\n        case AuthErrorCodes.WEAK_PASSWORD:\r\n            mensagem = 'A senha precisa do no mínimo 6 caracteres'\r\n            break;\r\n        default:\r\n            mensagem = 'Erro desconhecido'\r\n    }\r\n    return mensagem\r\n}\r\n\r\nexport async function cadastrar(nome, email, senha) {\r\n    const resultado = await createUserWithEmailAndPassword(auth, email, senha)\r\n        .then((dados) => {\r\n            const data = {\r\n                nome: nome,\r\n                email: dados.user.email,\r\n            }\r\n            addDoc(collection(db, 'usuarios'), data)\r\n            return \"sucesso\"\r\n        })\r\n        .catch((error) => {\r\n            return errosFirebase(error)\r\n        })\r\n    \r\n    return resultado\r\n}\r\n\r\nexport async function logar(email, senha) {\r\n    const resultado = await signInWithEmailAndPassword(auth, email, senha)\r\n        .then((dadosDoUsuario) => {\r\n            console.log(dadosDoUsuario)\r\n            return \"sucesso\"\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n            return \"Erro ao logar\"\r\n        })\r\n    return resultado\r\n}"],"mappings":";AACA,SAASA,8BAA8B,EAAEC,cAAc,EAAEC,0BAA0B,QAAQ,eAAe;AAC1G,SAASC,IAAI,EAAEC,EAAE;AACjB,SAASC,UAAU,EAAEC,MAAM,QAAQ,oBAAoB;AAEvD,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC1B,IAAIC,QAAQ,GAAG,EAAE;EACjB,QAAQD,KAAK,CAACE,IAAI;IACd,KAAKT,cAAc,CAACU,YAAY;MAC5BF,QAAQ,GAAG,2BAA2B;MACtC;IACJ,KAAKR,cAAc,CAACW,aAAa;MAC7BH,QAAQ,GAAG,iBAAiB;MAC5B;IACJ,KAAKR,cAAc,CAACY,aAAa;MAC7BJ,QAAQ,GAAG,2CAA2C;MACtD;IACJ;MACIA,QAAQ,GAAG,mBAAmB;EACtC;EACA,OAAOA,QAAQ;AACnB;AAEA,gBAAsBK,SAASA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAe9B,SAAAF,WAAA;EAAAA,UAAA,GAAAG,iBAAA,CAfM,WAAyBC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAChD,IAAMC,SAAS,SAASzB,8BAA8B,CAACG,IAAI,EAAEoB,KAAK,EAAEC,KAAK,CAAC,CACrEE,IAAI,CAAC,UAACC,KAAK,EAAK;MACb,IAAMC,IAAI,GAAG;QACTN,IAAI,EAAEA,IAAI;QACVC,KAAK,EAAEI,KAAK,CAACE,IAAI,CAACN;MACtB,CAAC;MACDjB,MAAM,CAACD,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,EAAEwB,IAAI,CAAC;MACxC,OAAO,SAAS;IACpB,CAAC,CAAC,CACDE,KAAK,CAAC,UAACtB,KAAK,EAAK;MACd,OAAOD,aAAa,CAACC,KAAK,CAAC;IAC/B,CAAC,CAAC;IAEN,OAAOiB,SAAS;EACpB,CAAC;EAAA,OAAAP,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBW,KAAKA,CAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,MAAA,CAAAf,KAAA,OAAAC,SAAA;AAAA;AAW1B,SAAAc,OAAA;EAAAA,MAAA,GAAAb,iBAAA,CAXM,WAAqBE,KAAK,EAAEC,KAAK,EAAE;IACtC,IAAMC,SAAS,SAASvB,0BAA0B,CAACC,IAAI,EAAEoB,KAAK,EAAEC,KAAK,CAAC,CACjEE,IAAI,CAAC,UAACS,cAAc,EAAK;MACtBC,OAAO,CAACC,GAAG,CAACF,cAAc,CAAC;MAC3B,OAAO,SAAS;IACpB,CAAC,CAAC,CACDL,KAAK,CAAC,UAACtB,KAAK,EAAK;MACd4B,OAAO,CAACC,GAAG,CAAC7B,KAAK,CAAC;MAClB,OAAO,eAAe;IAC1B,CAAC,CAAC;IACN,OAAOiB,SAAS;EACpB,CAAC;EAAA,OAAAS,MAAA,CAAAf,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}